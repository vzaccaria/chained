
extends base 
block append content
    .ui.segment.raised
        h1.ui.header.aligned.center.small-caps Your Awesome Social Network
        .sub-title (Needs Harmony, tested only on Firefox at the moment)
        .ui.divider
        form.ui.form#the-form 
            .ui.header.aligned.small-caps Register
            .two.fields
                .field 
                    .label.small-caps Nickname (triggers ajax, try with zack)
                    input#uname.input(placeholder="Nickname", name="uname", type="text")
                .field 
            .two.fields
                .field 
                    .label.small-caps First Name
                    input#fname.input(placeholder="First Name", name="fname", type="text")
                .field 
                    .label.small-caps Last Name
                    input#lname.input(placeholder="Last Name", name="lname", type="text")
            .one.field
                .field 
                    .label.small-caps E-mail 
                    input#email.input(placeholder="E-mail",name="email", type="text")                                
            .one.field
                .field
                    .label.small-caps Password 
                    input#password1.input(placeholder="Confirm password", name="password1",type="text")  
            .one.field
                .field
                    .label.small-caps Re-type password, just for science 
                    input#password2.input(placeholder="Password", name="password2",type="text")  
            .ui.button.blue Sign Up


    .ui.segment.raised
        :markdown
            ### Chained Browser Demo

            This demo shows a **form validation DSL** implemented with **Chained** in Coffeescript: 

                form '#form', ( check ) ->

                    field '#fname', (f) -> 
                        check(f.value).isNotNull().isLengthAtLeast(of: 2).show(f)

                    field '#lname', (f) -> 
                        check(f.value).isNotNull().isLengthAtLeast(of: 2).show(f)

                    field '#uname', (f) -> check(f.value).isNotNull().userNameShouldNotExist(msg: 'User already exists').show(f)

                    field '#password1', (f) ->
                        check(f.value).isNotNull().isLengthAtLeast(of: 4).show(f)

                    field '#password2', (f) ->
                        check(f.value).isNotNull().shouldMatchElement(element: '#password1', msg: "passwords should match").show(f)

            * `form` and `field` functions setup `focusout` callbacks. `check` is an alias for `chained._`.

            * The method `show` renders popup error messages whenever one of the  promise associated with a predicate-chain fails. 

            * The method `userNameShouldNotExist` is based on an Ajax `get` and, as such, is promise based. Chained allows to use the result in the next predicate as if it were synchronous. The users file at the moment contains only the user `zack`.

